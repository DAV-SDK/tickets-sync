I need you to help sync external tickets to the GitHub repository specified in the TARGET_REPO environment variable for the project specified in the PROJECT_NAME environment variable.

CONFIGURATION LOADING:
1. REQUIRED: Load platforms.yml and validate that PROJECT_NAME environment variable matches an existing project
2. REQUIRED: Extract search terms from the specified project configuration
3. REQUIRED: Dynamically populate platform search URLs using project's feedstock_name where applicable

FAST EXECUTION STRATEGY:
1. Use parallel tool calls to batch operations - run all gh CLI commands, searches, and platform checks simultaneously
2. Use the Task tool for complex searches across multiple platforms to reduce context usage
3. Only create issues for NEW external tickets not already tracked

WORKFLOW:
1. BATCH OPERATION: For the TARGET_REPO environment variable, run these in parallel:
   - gh issue list --repo $TARGET_REPO --state all --search "external-sync" --limit 50 (find existing synced issues)
   - gh issue list --repo $TARGET_REPO --state open --limit 20 (recent open issues)

2. PARALLEL PLATFORM SEARCH: Use platforms.yml config with PROJECT_NAME search terms to search all platforms simultaneously:
   - Spack: github.com/spack/spack/issues (search for project search terms)
   - Conda-forge: github.com/conda-forge/{project.feedstock_name}-feedstock/issues (use project's feedstock_name)
   - SUSE Bugzilla: Direct search for project search terms
   - Ubuntu Launchpad: bugs.launchpad.net/ubuntu/+source/{project search terms}

3. SMART DUPLICATE DETECTION: Before creating issues, check if external URL already exists in any GitHub issue body or title

4. BATCH ISSUE CREATION: Create all new issues in parallel for $TARGET_REPO using platforms.yml template

OPTIMIZATION RULES:
- Skip closed external tickets entirely
- Only sync tickets from last 12 months unless critical
- Batch all API calls and searches
- Use exact URL matching for duplicate detection
- Limit searches to 20 results per platform max

CRITICAL:
- ALWAYS validate PROJECT_NAME exists in platforms.yml projects section first
- Use project-specific search terms from platforms.yml configuration
- Follow platforms.yml template exactly for issue creation
- Only sync tickets created STRICTLY in the last 6 month (use date to check today's date)
- If the platform is a github repo, only sync the issues (NEVER the pull requests)
- ONLY synchronize tickets related to the $TARGET_REPO source code, never package dependent issues
- Replace {feedstock_name} in conda-forge URLs with the project's feedstock_name

ENVIRONMENT VARIABLES REQUIRED:
- TARGET_REPO: GitHub repository to sync tickets to
- PROJECT_NAME: Project identifier from platforms.yml (e.g., "adios2", "vtk", "paraview", "cmake")
